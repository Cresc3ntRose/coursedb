[package]
name = "wasm-client"
version = "0.1.0"
authors = ["Yuxuan Huang<crescentrose@nuaa.edu.cn>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.69"
serde_json = "1.0.117"
serde_derive = "1.0.203"
wasm-bindgen-futures = "0.4.42"
chrono = {version = "0.4.38", features = ["serde"]}
serde = {version = "1.0.203", features = ["derive"]}
wasm-bindgen = {version = "0.2.92", features = ["serde-serialize"]}
web-sys = {version = "0.3.69", features = [
    "Headers", 
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
    "Window",
    "Document",
    "Element",
    "HtmlElement",
    "Node",
    "console",
    "HtmlButtonElement",
    "MouseEvent",
    "Location",
]}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.42"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
